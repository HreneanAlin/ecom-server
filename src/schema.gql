# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type MovieDto {
  _id: String!
  title: String!
  description: String!
  price: Float!
  onSale: Boolean!
  quantity: Int!
}

type CheckoutSession {
  """the id of the checkout session"""
  _id: String!
  stripeSessionId: String!
  url: String!
  movies: [MovieDto!]!
  status: String!
}

type Movie {
  """the id of the movie"""
  _id: String!
  title: String!
  description: String!

  """price in USD"""
  price: Float!
  onSale: Boolean!

  """the checkouts of a movie"""
  checkoutSessions: [CheckoutSession!]!
}

type MovieWithQuantityDTO {
  _id: String!
  movie: Movie!
  quantity: Int!
}

type PaymentIntentRecord {
  _id: String!
  stripeId: String!
  movies: [MovieDto!]!
  status: String!
}

type PaymentIntentDTO {
  clientSecret: String!
}

type UserDto {
  _id: String!
  firstName: String!
  lastName: String!
  email: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  payments: [CheckoutSession!]!
  movies: [MovieWithQuantityDTO!]!
  openPayments: [CheckoutSession!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type TokensDto {
  token: String!
  tokenExpiration: DateTime!
  refreshToken: String!
}

type UserWithTokensDto {
  _id: String!
  firstName: String!
  lastName: String!
  email: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  payments: [CheckoutSession!]!
  movies: [MovieWithQuantityDTO!]!
  openPayments: [CheckoutSession!]!
  tokens: TokensDto!
}

type SignOutDto {
  success: Boolean!
}

type AppSubscription {
  _id: String!
  name: String!
  description: String!

  """price in USD"""
  price: Float!
  plan: SubscriptionPlan!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum SubscriptionPlan {
  Year
  HalfYear
  Month
}

type Query {
  movies: [Movie!]!
  movie(id: String!): Movie!
  checkoutSession(id: String!): CheckoutSession!
  paymentIntent(id: String!): PaymentIntentRecord!
  me: UserDto!
  appSubscriptions: [AppSubscription!]!
}

type Mutation {
  createMovie(createMovieInput: CreateMovieInput!): Movie!
  updateMovie(updateMovieInput: UpdateMovieInput!): Movie!
  removeMovie(id: String!): Movie!
  createCheckoutSession(createPayment: CreatePaymentInput!): CheckoutSession!
  createPaymentIntent(createPayment: CreatePaymentInput!): PaymentIntentDTO!
  signUpLocal(createUserInput: CreateUser!): UserWithTokensDto!
  signInLocal(signInLocal: SignInLocal!): UserWithTokensDto!
  refreshTokens: TokensDto!
  signOut: SignOutDto!
  createAppSubscription(CreateAppSubscriptionInput: CreateAppSubscriptionInput!): AppSubscription!
}

input CreateMovieInput {
  title: String!
  description: String!

  """price in USD"""
  price: Int!
  onSale: Boolean
}

input UpdateMovieInput {
  title: String
  description: String

  """price in USD"""
  price: Int
  onSale: Boolean
  id: String!
}

input CreatePaymentInput {
  products: [MovieInput!]!
}

input MovieInput {
  movieId: String!
  quantity: Int!
}

input CreateUser {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

input SignInLocal {
  email: String!
  password: String!
}

input CreateAppSubscriptionInput {
  name: String!
  description: String!
  price: Float!
  plan: SubscriptionPlan!
}

type Subscription {
  paymentDone(id: String!): PaymentIntentRecord!
}